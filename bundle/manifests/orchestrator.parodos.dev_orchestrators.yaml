apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: orchestrators.orchestrator.parodos.dev
spec:
  group: orchestrator.parodos.dev
  names:
    kind: Orchestrator
    listKind: OrchestratorList
    plural: orchestrators
    singular: orchestrator
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Deployed')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Deployed')].reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Orchestrator is the Schema for the orchestrators API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Orchestrator
            properties:
              argocd:
                description: ArgoCD contains the fields for the ArgoCD configuration
                properties:
                  enabled:
                    default: false
                    description: Enabled determines whether to install the ArgoCD
                      plugin and create the orchestrator AppProject
                    type: boolean
                  namespace:
                    default: orchestrator-gitops
                    description: Namespace defines the namespace where ther ArgoCD
                      operator is deployed and is watching for argoapp CR instances
                    type: string
                  password:
                    description: Password contains the password to use to authenticate
                      with the ArgoCD instance
                    type: string
                  url:
                    description: URL contains the REST API endpoint of the ArgoCD
                      instance
                    type: string
                  username:
                    default: admin
                    description: Username contains the username to authenticate against
                      the ArgoCD instance
                    type: string
                type: object
              orchestrator:
                description: Orchestrator contains the fields for the orchestrator
                  configuration
                properties:
                  namespace:
                    default: sonataflow-infra
                    description: Namespace where the data index, job service and workflows
                      are deployed
                    type: string
                  sonataPlatform:
                    description: SonataflowPlatform contains the pod resource configuration
                      to be used for the data index and job services
                    properties:
                      resources:
                        description: Resources contains the requests and limit of
                          CPU and memory resources for the pod instance
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              cpu:
                                default: 500m
                                description: CPU defines the CPU resource limits
                                type: string
                              memory:
                                default: 1Gi
                                description: Memory defines the memory resource limits
                                type: string
                            type: object
                          requests:
                            description: |
                              Requests describes the minimum amount of compute resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            properties:
                              cpu:
                                default: 250m
                                description: CPU defines the CPU resource limits
                                type: string
                              memory:
                                default: 64Mi
                                description: Memory defines the memory resource limits
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              postgres:
                description: Postgres contains the configuration to be injected in
                  the SonataflowPlatform configuration to setup the persistency in
                  the sonataflows
                properties:
                  authSecret:
                    description: name of existing secret to use for PostgreSQL credentials.
                    properties:
                      name:
                        default: sonataflow-psql-postgresql
                        description: name of existing secret to use for PostgreSQL
                          credentials.
                        type: string
                      passwordKey:
                        description: name of key in existing secret to use for PostgreSQL
                          credentials
                        type: string
                      userKey:
                        default: postgres-username
                        description: name of key in existing secret to use for PostgreSQL
                          credentials.
                        type: string
                    type: object
                  database:
                    default: sonataflow
                    description: Database describes the name of the existing database
                      instance used by data index and job service. Defaults to sonataflow
                    type: string
                  serviceName:
                    default: sonataflow-psql-postgresql
                    description: ServiceName specifies the kubernetes service that
                      exposes the PostgreSQL service. Defaults to sonataflow-psql-postgresql
                    type: string
                  serviceNamespace:
                    default: sonataflow-infra
                    description: ServiceNamespace specifies the kubernetes namespace
                      where the PostgreSQL service is located. Defaults to sonataflow-infra
                    type: string
                type: object
              rhdhOperator:
                description: RHDH Operator contains the configuration fields for the
                  Red Hat Developer Hub operator
                properties:
                  enabled:
                    default: true
                    description: Enabled determines whether the operator should be
                      deployed by the chart. Defaults to true
                    type: boolean
                  github:
                    description: Github contains the configuration parameters to connect
                      to the GitHub server.
                    properties:
                      clientId:
                        description: ClientID defines the client ID that you generated
                          on GitHub, for GitHub authentication (requires GitHub App).
                        type: string
                      clientSecret:
                        description: ClientSecret defines the client secret tied to
                          the generated client ID.
                        type: string
                      token:
                        description: Token defines the authentication token as expected
                          by GitHub. Required for importing resource to the catalog,
                          launching software templates and more.
                        type: string
                    type: object
                  k8s:
                    description: K8s contains the kubernetes configuration properties
                      used to connect with the KAPI server
                    properties:
                      clusterToken:
                        description: ClusterToken contains the kubernetes API bearer
                          token used for authentication.
                        type: string
                      clusterUrl:
                        description: ClusterURL contains the API URL of the kubernetes
                          cluster
                        type: string
                    type: object
                  subscription:
                    description: Subscription specifies the subscription attributes
                      to use to deploy the operator.
                    properties:
                      channel:
                        default: fast
                        description: Channel defines the channel of the operator package
                          to subscribe to
                        type: string
                      installPlanApproval:
                        default: Automatic
                        description: InstallPlanApproval specifies the approval policy
                          for an InstallPlan. It must be one of "Automatic" or "Manual".
                          Defaults to Automatic.
                        type: string
                      name:
                        default: rhdh
                        description: Name defines the name of the operator package
                        type: string
                      namespace:
                        default: rhdh-operator
                        description: Namespace determines the namespace where the
                          operator should be deployed. Defaults to rhdh-operator
                        type: string
                    type: object
                type: object
              sonataFlowOperator:
                description: SonatafFlowOperator contains the configuration fields
                  for the SonataFlow Operator
                properties:
                  enabled:
                    default: true
                    description: Enabled determines whether to deploy the SonataFlow
                      Operator operator or not. Defaults to true.
                    type: boolean
                type: object
            type: object
          status:
            description: Status defines the observed state of Orchestrator
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
